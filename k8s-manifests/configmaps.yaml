apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
        
        location /api/ {
            proxy_pass http://backend-service:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-content
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>PDF Chat - AI Assistant</title>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap">
        <style>
            /* General Reset */
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }

            body {
                font-family: 'Poppins', sans-serif;
                background: linear-gradient(135deg, #6a11cb, #2575fc);
                color: #fff;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                overflow: hidden;
            }

            header {
                text-align: center;
                animation: fadeIn 1.5s ease-in-out;
            }

            h1 {
                font-size: 3rem;
                font-weight: 600;
                margin-bottom: 1rem;
                animation: slideIn 1s ease-in-out;
            }

            p {
                font-size: 1.2rem;
                font-weight: 300;
                margin-bottom: 2rem;
                animation: slideIn 1.2s ease-in-out;
            }

            .btn {
                display: inline-block;
                padding: 12px 30px;
                font-size: 1rem;
                font-weight: 500;
                color: #6a11cb;
                background: #fff;
                border-radius: 50px;
                text-decoration: none;
                transition: all 0.3s ease;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
                animation: fadeInUp 1.5s ease-in-out;
            }

            .btn:hover {
                background: #f0f0f0;
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            }

            /* Animations */
            @keyframes fadeIn {
                from {
                    opacity: 0;
                }
                to {
                    opacity: 1;
                }
            }

            @keyframes slideIn {
                from {
                    transform: translateY(-20px);
                    opacity: 0;
                }
                to {
                    transform: translateY(0);
                    opacity: 1;
                }
            }

            @keyframes fadeInUp {
                from {
                    transform: translateY(20px);
                    opacity: 0;
                }
                to {
                    transform: translateY(0);
                    opacity: 1;
                }
            }

            /* Background Animation */
            body::before {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 10%, transparent 10.01%);
                background-size: 20px 20px;
                animation: moveBackground 10s linear infinite;
                z-index: -1;
            }

            @keyframes moveBackground {
                from {
                    transform: translate(0, 0);
                }
                to {
                    transform: translate(20px, 20px);
                }
            }
        </style>
    </head>
    <body>
        <header>
            <h1>Chat with Your PDFs</h1>
            <p>Upload your document and get instant AI-powered insights!</p>
            <a href="login.html" class="btn">Get Started</a>
        </header>
        <script src="/js/index.js"></script>
    </body>
    </html>
  login.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Login - PDF Chatbot</title>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap">
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            body {
                font-family: 'Poppins', sans-serif;
                background: linear-gradient(135deg, #6a11cb, #2575fc);
                color: #fff;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                overflow: hidden;
                position: relative;
            }
            .container {
                background: rgba(255, 255, 255, 0.1);
                padding: 2rem;
                border-radius: 15px;
                backdrop-filter: blur(10px);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
                text-align: center;
                width: 100%;
                max-width: 400px;
                animation: fadeIn 1.5s ease-in-out;
            }
            h1 {
                font-size: 2.5rem;
                font-weight: 600;
                margin-bottom: 1.5rem;
                animation: slideIn 1s ease-in-out;
            }
            form {
                display: flex;
                flex-direction: column;
                gap: 1rem;
            }
            input {
                padding: 12px;
                font-size: 1rem;
                border: none;
                border-radius: 50px;
                outline: none;
                background: rgba(255, 255, 255, 0.2);
                color: #fff;
                transition: all 0.3s ease;
            }
            input::placeholder {
                color: rgba(255, 255, 255, 0.7);
            }
            input:focus {
                background: rgba(255, 255, 255, 0.3);
                box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
            }
            button {
                padding: 12px;
                font-size: 1rem;
                font-weight: 500;
                color: #6a11cb;
                background: #fff;
                border: none;
                border-radius: 50px;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            }
            button:hover {
                background: #f0f0f0;
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            }
            .back-to-home {
                position: absolute;
                top: 20px;
                left: 20px;
                padding: 10px 20px;
                font-size: 1rem;
                font-weight: 500;
                color: #6a11cb;
                background: #fff;
                border: none;
                border-radius: 50px;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            }
            .back-to-home:hover {
                background: #f0f0f0;
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            }
            @keyframes fadeIn {
                from { opacity: 0; }
                to { opacity: 1; }
            }
            @keyframes slideIn {
                from { transform: translateY(-20px); opacity: 0; }
                to { transform: translateY(0); opacity: 1; }
            }
            a {
                color: #fff;
                text-decoration: none;
                font-weight: 500;
                transition: all 0.3s ease;
            }
            a:hover {
                text-decoration: underline;
            }
            p {
                margin-top: 1.5rem;
                font-size: 0.9rem;
            }
        </style>
    </head>
    <body>
        <button class="back-to-home" onclick="window.location.href='index.html'">Back to Home</button>
        <div class="container">
            <h1>Login</h1>
            <form id="loginForm">
                <input type="text" id="username" placeholder="Username" required>
                <input type="password" id="password" placeholder="Password" required>
                <button type="submit">Login</button>
            </form>
            <p>Don't have an account? <a href="signup.html">Sign up here</a></p>
        </div>
        <script>
            document.getElementById('loginForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const username = document.getElementById('username').value;
                const password = document.getElementById('password').value;
                
                fetch('/api/token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.access_token) {
                        localStorage.setItem('token', data.access_token);
                        window.location.href = 'main.html';
                    } else {
                        alert('Login failed: ' + (data.detail || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Login failed: Network error');
                });
            });
        </script>
    </body>
    </html>
  signup.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sign Up - PDF Chatbot</title>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap">
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            body {
                font-family: 'Poppins', sans-serif;
                background: linear-gradient(135deg, #6a11cb, #2575fc);
                color: #fff;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                overflow: hidden;
                position: relative;
            }
            .container {
                background: rgba(255, 255, 255, 0.1);
                padding: 2rem;
                border-radius: 15px;
                backdrop-filter: blur(10px);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
                text-align: center;
                width: 100%;
                max-width: 400px;
                animation: fadeIn 1.5s ease-in-out;
            }
            h1 {
                font-size: 2.5rem;
                font-weight: 600;
                margin-bottom: 1.5rem;
                animation: slideIn 1s ease-in-out;
            }
            form {
                display: flex;
                flex-direction: column;
                gap: 1rem;
            }
            input {
                padding: 12px;
                font-size: 1rem;
                border: none;
                border-radius: 50px;
                outline: none;
                background: rgba(255, 255, 255, 0.2);
                color: #fff;
                transition: all 0.3s ease;
            }
            input::placeholder {
                color: rgba(255, 255, 255, 0.7);
            }
            input:focus {
                background: rgba(255, 255, 255, 0.3);
                box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
            }
            button {
                padding: 12px;
                font-size: 1rem;
                font-weight: 500;
                color: #6a11cb;
                background: #fff;
                border: none;
                border-radius: 50px;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            }
            button:hover {
                background: #f0f0f0;
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            }
            .back-to-home {
                position: absolute;
                top: 20px;
                left: 20px;
                padding: 10px 20px;
                font-size: 1rem;
                font-weight: 500;
                color: #6a11cb;
                background: #fff;
                border: none;
                border-radius: 50px;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            }
            .back-to-home:hover {
                background: #f0f0f0;
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            }
            @keyframes fadeIn {
                from { opacity: 0; }
                to { opacity: 1; }
            }
            @keyframes slideIn {
                from { transform: translateY(-20px); opacity: 0; }
                to { transform: translateY(0); opacity: 1; }
            }
            a {
                color: #fff;
                text-decoration: none;
                font-weight: 500;
                transition: all 0.3s ease;
            }
            a:hover {
                text-decoration: underline;
            }
            p {
                margin-top: 1.5rem;
                font-size: 0.9rem;
            }
        </style>
    </head>
    <body>
        <button class="back-to-home" onclick="window.location.href='index.html'">Back to Home</button>
        <div class="container">
            <h1>Sign Up</h1>
            <form id="signupForm">
                <input type="text" id="username" placeholder="Username" required>
                <input type="password" id="password" placeholder="Password" required>
                <button type="submit">Sign Up</button>
            </form>
            <p>Already have an account? <a href="login.html">Login here</a></p>
        </div>
        <script>
            document.getElementById('signupForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const username = document.getElementById('username').value;
                const password = document.getElementById('password').value;
                
                fetch('/api/signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({username: username, password: password})
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Account created successfully! Please login.');
                        window.location.href = 'login.html';
                    } else {
                        alert('Signup failed: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Signup failed: Network error');
                });
            });
        </script>
    </body>
    </html>
  main.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>PDF Chatbot - Main</title>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap">
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            body {
                font-family: 'Poppins', sans-serif;
                background: linear-gradient(135deg, #6a11cb, #2575fc);
                color: #fff;
                min-height: 100vh;
                padding: 20px;
            }
            .header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 2rem;
            }
            .logout-btn {
                padding: 10px 20px;
                background: rgba(255, 255, 255, 0.2);
                color: #fff;
                border: none;
                border-radius: 50px;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            .logout-btn:hover {
                background: rgba(255, 255, 255, 0.3);
            }
            .container {
                max-width: 1200px;
                margin: 0 auto;
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 2rem;
                height: calc(100vh - 120px);
            }
            .upload-section, .chat-section {
                background: rgba(255, 255, 255, 0.1);
                padding: 2rem;
                border-radius: 15px;
                backdrop-filter: blur(10px);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            }
            .file-input {
                width: 100%;
                padding: 15px;
                margin: 10px 0;
                border: 2px dashed rgba(255, 255, 255, 0.3);
                border-radius: 10px;
                background: rgba(255, 255, 255, 0.1);
                color: #fff;
                text-align: center;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            .file-input:hover {
                border-color: rgba(255, 255, 255, 0.5);
                background: rgba(255, 255, 255, 0.2);
            }
            .upload-btn {
                width: 100%;
                padding: 12px;
                background: #fff;
                color: #6a11cb;
                border: none;
                border-radius: 50px;
                font-weight: 500;
                cursor: pointer;
                transition: all 0.3s ease;
                margin-top: 1rem;
            }
            .upload-btn:hover {
                background: #f0f0f0;
                transform: translateY(-2px);
            }
            .chat-container {
                height: 400px;
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 10px;
                padding: 1rem;
                overflow-y: auto;
                background: rgba(255, 255, 255, 0.05);
                margin-bottom: 1rem;
            }
            .message {
                margin-bottom: 1rem;
                padding: 10px;
                border-radius: 10px;
                max-width: 80%;
            }
            .user-message {
                background: rgba(255, 255, 255, 0.2);
                margin-left: auto;
                text-align: right;
            }
            .bot-message {
                background: rgba(255, 255, 255, 0.1);
                margin-right: auto;
            }
            .input-container {
                display: flex;
                gap: 10px;
            }
            .message-input {
                flex: 1;
                padding: 12px;
                border: none;
                border-radius: 50px;
                background: rgba(255, 255, 255, 0.2);
                color: #fff;
                outline: none;
            }
            .message-input::placeholder {
                color: rgba(255, 255, 255, 0.7);
            }
            .send-btn {
                padding: 12px 20px;
                background: #fff;
                color: #6a11cb;
                border: none;
                border-radius: 50px;
                font-weight: 500;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            .send-btn:hover {
                background: #f0f0f0;
                transform: translateY(-2px);
            }
            h2 {
                margin-bottom: 1.5rem;
                text-align: center;
            }
        </style>
    </head>
    <body>
        <div class="header">
            <h1>PDF Chatbot Dashboard</h1>
            <button class="logout-btn" onclick="logout()">Logout</button>
        </div>
        
        <div class="container">
            <div class="upload-section">
                <h2>Upload PDF</h2>
                <input type="file" id="pdfFile" accept=".pdf" class="file-input">
                <button onclick="uploadPDF()" class="upload-btn">Upload PDF</button>
                <div id="uploadStatus"></div>
            </div>
            
            <div class="chat-section">
                <h2>Chat with PDF</h2>
                <div id="chatContainer" class="chat-container"></div>
                <div class="input-container">
                    <input type="text" id="messageInput" placeholder="Ask a question about your PDF..." class="message-input">
                    <button onclick="sendMessage()" class="send-btn">Send</button>
                </div>
            </div>
        </div>
        
        <script>
            let currentPdfId = null;
            
            function logout() {
                localStorage.removeItem('token');
                window.location.href = 'index.html';
            }
            
            // Check if user is logged in
            if (!localStorage.getItem('token')) {
                window.location.href = 'login.html';
            }
            
            function uploadPDF() {
                const fileInput = document.getElementById('pdfFile');
                const file = fileInput.files[0];
                
                if (!file) {
                    alert('Please select a PDF file');
                    return;
                }
                
                const formData = new FormData();
                formData.append('file', file);
                
                fetch('/api/upload_pdf', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    },
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        currentPdfId = data.pdf_id;
                        document.getElementById('uploadStatus').innerHTML = '<p style="color: #4CAF50;">PDF uploaded successfully!</p>';
                    } else {
                        alert('Upload failed: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Upload failed: Network error');
                });
            }
            
            function sendMessage() {
                if (!currentPdfId) {
                    alert('Please upload a PDF first');
                    return;
                }
                
                const messageInput = document.getElementById('messageInput');
                const message = messageInput.value.trim();
                
                if (!message) {
                    return;
                }
                
                addMessage(message, 'user');
                messageInput.value = '';
                
                fetch(`/api/chat_with_pdf/${currentPdfId}?user_message=${encodeURIComponent(message)}`, {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        addMessage(data.message, 'bot');
                    } else {
                        addMessage('Error: ' + (data.detail || 'Unknown error'), 'bot');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    addMessage('Error: Network error', 'bot');
                });
            }
            
            function addMessage(text, type) {
                const chatContainer = document.getElementById('chatContainer');
                const messageDiv = document.createElement('div');
                messageDiv.className = `message ${type}-message`;
                messageDiv.textContent = text;
                chatContainer.appendChild(messageDiv);
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }
            
            // Allow Enter key to send message
            document.getElementById('messageInput').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    sendMessage();
                }
            });
        </script>
    </body>
    </html> 